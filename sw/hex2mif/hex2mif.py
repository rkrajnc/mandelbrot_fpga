#!/usr/bin/python


import sys
from optparse import OptionParser


# get commandline options & arguments
usage = "Usage: %prog [options] in.hex out.mif"
parser = OptionParser(usage=usage)
parser.add_option("-w", "--data-width",    dest="dw",     action="store",      default="32",     help="Force use of this many data bits")
parser.add_option("-p", "--pad",           dest="pad",    action="store",      default="0",      help="Pad up to this many entries")
(options, args) = parser.parse_args()

# parse args
if (len(args) != 2) : parser.error("Invalid number of arguments.\n")
fin = args[0]
fon = args[1]
pad = int(options.pad, 0)

# line counter
line_cnt = 0

# output
out = ""

# open input file
with open(fin, 'r') as f:
  for line in f:
    line =  line[0:len(line)-1]
    if (line != ""):
      #val = int(line, 0)
      out = out + "    %x : %s;\n" % (line_cnt, line)
      line_cnt = line_cnt + 1
  if (pad != 0):
    missing_lines = pad - line_cnt
    for padding in range(missing_lines):
      out = out + "    %x : %s;\n" % (line_cnt, "00000000") # TODO
      line_cnt = line_cnt + 1

# header
header = ""
header = header + "--  Memory Initialization File\n"
header = header + "--  Generated by hex2mif.py\n"
header = header + "--  From: %s\n\n" % fin
header = header + "DEPTH = %d;\n" % line_cnt
header = header + "WIDTH = %d;\n\n" % int(options.dw,0)
header = header + "ADDRESS_RADIX = HEX;\n"
header = header + "DATA_RADIX = HEX;\n\n"
header = header + "CONTENT\n  BEGIN\n"

# footer
footer = "  END;\n"

# add header + out + footer
out = header + out + footer


# write 
with open(fon, 'w') as f:
  f.write(out)


# end

